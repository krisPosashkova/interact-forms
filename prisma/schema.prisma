generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tag {
  id           Int           @id @default(autoincrement())
  name         String        @unique @db.VarChar(100)
  templateTags TemplateTag[]

  @@index([name], map: "idx_tags_name")
  @@map("tags")
}

model TemplateTag {
  templateId Int      @map("template_id")
  tagId      Int      @map("tag_id")
  tag        Tag      @relation(fields: [tagId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  template   Template @relation(fields: [templateId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([templateId, tagId])
  @@index([templateId, tagId], map: "idx_template_tags")
  @@map("template_tags")
}

model Template {
  id           Int           @id @default(autoincrement())
  userId       Int           @map("user_id")
  title        String        @db.VarChar(100)
  description  String?
  createdAt    DateTime?     @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt    DateTime?     @default(now()) @map("updated_at") @db.Timestamp(6)
  isPublic     Boolean?      @default(false) @map("is_public")
  templateTags TemplateTag[]
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("templates")
}

model User {
  id           Int        @id @default(autoincrement())
  username     String     @db.VarChar(50)
  email        String     @unique @db.VarChar(100)
  passwordHash String?    @map("password_hash") @db.VarChar(255)
  role         UserRole?  @default(user)
  createdAt    DateTime?  @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt    DateTime?  @default(now()) @map("updated_at") @db.Timestamp(6)
  templates    Template[]

  @@map("users")
}

enum UserRole {
  user
  admin

  @@map("user_role")
}
